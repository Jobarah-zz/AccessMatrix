{"version":3,"sources":["main.js"],"names":["Shell","command","question","args","split","path","readdir","__dirname","err","files","map","item","console","log","AccessControlMatrix","ls"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;IAEqBA;;;;;;;gCACN;;AAEb,OAAIC,UAAU,uBAAaC,QAAb,CAAsB,WAAtB,CAAd;AACA,OAAIC,OAAOF,QAAQG,KAAR,CAAc,GAAd,CAAX;AACA;;;qBAEEC,MAAM;AACR,gBAAGC,OAAH,CAAWC,SAAX,EAAsB,UAASC,GAAT,EAAcC,KAAd,EAAqB;AACvC,QAAID,GAAJ,EAAS;AACZC,UAAMC,GAAN,CAAU,UAACC,IAAD,EAAU;AACnBC,aAAQC,GAAR,CAAYF,IAAZ;AACA,KAFD;AAGA,IALD;AAMA;;;;;;kBAdmBX;;;AAkBrB,IAAIc,sBAAsB,IAAId,KAAJ,EAA1B;;AAEAc,oBAAoBC,EAApB,CAAuB,IAAvB","file":"main.js","sourcesContent":["import readlineSync from 'readline-sync';\nimport fs from 'fs';\nimport Matrix from './matrix';\n\nexport default class Shell {\n\treadCommand() {\n\n\t\tlet command = readlineSync.question('Command: ');\n\t\tlet args = command.split(' ');\n\t}\n\n\tls(path) {\n\t\tfs.readdir(__dirname, function(err, files) {\n\t\t    if (err) return;\n\t\t\tfiles.map((item) => {\n\t\t\t\tconsole.log(item);\n\t\t\t})\n\t\t});\n\t}\n\n}\n\nlet AccessControlMatrix = new Shell();\n\nAccessControlMatrix.ls('oa');"]}