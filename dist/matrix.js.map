{"version":3,"sources":["matrix.js"],"names":["Matrix","matrix","Array","push","previousDomains","console","log","addDomain","activeDomain","object","domainIndex","getDomainIndex","getActiveDomain","objectIndex","getObjectIndex","map","domain","index","newDomain","retIndex","item","domains","permissions","getDomainPermissionsForObject","pop"],"mappings":"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","file":"matrix.js","sourcesContent":["export default class Matrix {\n\t\n\tconstructor() {\n\n\t\tthis.matrix = new Array();\n\t\tthis.matrix.push(new Array());\n\t\tthis.previousDomains = new Array();\n\t\tconsole.log(this.matrix);\n\t\tthis.addDomain('admin');\n\t\tthis.activeDomain = 'admin';\n\t}\n\n\taddObject(object) {\n\n\t\tlet domainIndex = this.getDomainIndex(this.getActiveDomain());\n\n\t\tthis.matrix[0].push(object);\n\n\t\tlet objectIndex = this.getObjectIndex(object);\n\n\t\tthis.matrix.map((domain, index) => {\n\t\t\tif (index > 0) {\n\t\t\t\tif(index === domainIndex || domain[0] === 'admin')\n\t\t\t\t\tdomain.push('rwx');\n\t\t\t\telse\n\t\t\t\t\tdomain.push('-');\n\t\t\t}\n\t\t});\n\t}\n\n\taddDomain(domain) {\n\n\t\tlet newDomain = new Array();\n\n\t\tnewDomain.push(domain);\n\t\tthis.matrix[0].map(() => newDomain.push('-'));\n\t\tthis.matrix.push(newDomain);\n\t\tconsole.log(this.matrix);\n\t}\n\n\tgetDomainPermissionsForObject(domain, object) {\n\n\t\tconst domainIndex = this.getDomainIndex(domain);\n\t\tconst objectIndex = this.getObjectIndex(object);\n\n\t\treturn this.matrix[domainIndex][objectIndex];\n\t}\n\n\tgetDomainIndex(domain) {\n\n\t\tlet retIndex = -1;\n\n\t\tthis.matrix.map((item, index) => {\n\t\t\tif (item[0] == domain)\n\t\t\t\tretIndex = index;\n\t\t});\n\n\t\treturn retIndex;\n\t}\n\n\tgetObjectIndex(object) {\n\n\t\tlet retIndex = -1;\n\n\t\tthis.matrix[0].map((item, index) => {\n\t\t\tif (item == object)\n\t\t\t\tretIndex = index;\n\t\t});\n\n\t\treturn retIndex;\n\t}\n\t\n\tsetActiveDomain(domain) {\n\t\tthis.activeDomain = domain;\n\t}\n\n\tgetActiveDomain() {\n\t\treturn this.activeDomain;\n\t}\n\n\tgetActiveDomainObjects() {\n\n\t\tconst index = getDomainIndex(this.activeDomain);\n\t\tconst domains = this.matrix[index].map((item) => {\n\n\t\t\tlet permissions = this.getDomainPermissionsForObject(this.activeDomain, item);\n\t\t})\n\t}\n\n\tswitchDomain(domain) {\n\t\tif (this.previousDomains[this.previousDomains-2] === domain)\n\t\t\tthis.previousDomains.pop();\n\t\telse\n\t\t\tthis.previousDomains.push(this.getActiveDomain());\n\t\tthis.activeDomain = domain;\n\t\tconsole.log(this.previousDomains);\n\t}\n\n\tprintMatrix() {\n\t\tconsole.log(this.matrix);\n\t}\n}\n"]}